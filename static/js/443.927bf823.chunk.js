"use strict";(self.webpackChunkyatharth_personal_website=self.webpackChunkyatharth_personal_website||[]).push([[443],{443:function(e,t,i){i.r(t);var a=i(296),o=i(458),n=i(43),r=i(392),s=i(9),c=i(579);t.default=function(){var e=[{title:"AI Voice Assistant",description:"Created a super fast voice-activated personal assistant by utilizing a Groq AI API. This assistant is capable of receiving voice messages and providing vocal responses with a avg latency of 1.2sec.",technologies:["Groq","Python","OpenAI TTS"],github:"https://github.com/yatharth-gupta/AI_Voice_Assistant",demo:"#",category:"AI/ML",image:"/Ai-Voice-Assistant.jpeg"},{title:"Arch-copilot @SERC-LAB, IIIT-HYD",description:"Developed a Copilot tool for software architects using RAG to deliver accurate architectural advice, leveraging a manually verified database of 5000+ ADRs.",technologies:["LangChain","MongoDB","OpenAI","RAG"],github:"#",demo:"#",category:"AI/ML",image:"/Arch-copilot.jpeg"},{title:"Greddit: A MERN stack based website",description:"Designed and implemented a Dockerized Reddit-style social networking site, including user authentication, authorization, registration, chat box, followers, moderators, pages, create, save, and report posts, and many other features completed with testing.",technologies:["MERN","Docker","Web Dev"],github:"https://github.com/yatharth-gupta/Greddiit",demo:"https://gredit.netlify.app/",category:"Web Development",image:"/Greddit.jpeg"},{title:"ML Models From Scratch",description:"Developed 10+ machine learning models from scratch, including KNN, decision trees, PCA, CNN, Ensemble Learning, and HMM, optimizing performance with hyperparameter tuning via Wandb.",technologies:["PyTorch","TensorFlow","Wandb"],github:"https://github.com/yatharth-gupta/ML-Models-From-Scratch",demo:"#",category:"AI/ML",image:"/ML-models.png"},{title:"User defined Interactive Shell for Linux",description:"A Linux-like shell from scratch using modular C code with a 3000+ line codebase, supporting: I/O redirection, piping, background/foreground processes, signals, and a custom discover feature.",technologies:["C","Operating System","Linux"],github:"https://github.com/yatharth-gupta/C-shell",demo:"#",category:"Systems",image:"/C-shell.jpeg"},{title:"AI-powered Load Balancer",description:"Using AI to dynamically control the number of instances (servers) of a project on AWS cloud to balance the incoming load by recognizing hand gestures using pre-trained models.",technologies:["Python","AWS-cloud","Computer Vision"],github:"https://github.com/yatharth-gupta/AI_aws_cloud",demo:"#",category:"AI/ML",image:"/Load-balancer.png"},{title:"Mini-World: A Database CLI",description:"Developed a CLI using pymysql library to connect Python with MySQL database on localhost, providing a user-friendly and abstracted interface for executing queries over fictitious University data.",technologies:["SQL","Python","CLI"],github:"https://github.com/yatharth-gupta/Mini-World",demo:"#",category:"Databases",image:"/Mini-world.jpeg"},{title:"Water Flow Monitoring System",description:"Collaborated to develop an embedded system project that tracks data on volume, usage, and waste while monitoring water flow in pipes. Had a web interface that used graphics to present the data.",technologies:["ESP32","IoT","Embedded Systems"],github:"https://github.com/VanshMarda/Water-flow-managment",demo:"#",category:"IoT",image:"/Water-Flow-Monitoring.jpg"},{title:"Smart Room based on IoT",description:"Collaborated to develop a prototype of a room equipped with a smart fan, smart light, and motion detection controlled by sensors for optimal energy use.",technologies:["ESP32","IoT","Sensors"],github:"#",demo:"#",category:"IoT",image:"/Smart-Room.jpeg"}],t=["All"].concat((0,o.A)(new Set(e.map((function(e){return e.category}))))),i=(0,n.useState)("All"),l=(0,a.A)(i,2),d=l[0],h=l[1],g=(0,n.useState)(1),p=(0,a.A)(g,2),u=p[0],m=p[1],f=(0,n.useState)(null),b=(0,a.A)(f,2),y=b[0],x=b[1],v=(0,n.useState)([]),j=(0,a.A)(v,2),w=j[0],A=j[1],N=(0,n.useState)([]),I=(0,a.A)(N,2),S=I[0],M=I[1],C=(0,n.useState)(1),L=(0,a.A)(C,2),k=L[0],D=L[1];(0,n.useEffect)((function(){A(e),M(e.slice(0,3)),D(Math.ceil(e.length/3))}),[]),(0,n.useEffect)((function(){A("All"===d?e:e.filter((function(e){return e.category===d}))),m(1)}),[d]),(0,n.useEffect)((function(){console.log(u),console.log(w);var e=3*u,t=e-3;M(w.slice(t,e)),D(Math.ceil(w.length/3))}),[u,w]),(0,n.useEffect)((function(){console.log("curr: ",S)}),[S]);var E={hidden:{opacity:0,y:20},show:{opacity:1,y:0}};return(0,c.jsx)("section",{id:"projects",className:"projects py-20 relative",children:(0,c.jsxs)("div",{className:"container",children:[(0,c.jsxs)(r.P.h2,{className:"section-title text-center mb-6 text-accent font-bold text-3xl",initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},viewport:{once:!0},transition:{duration:.5},children:["Creative Builds",(0,c.jsx)("div",{className:"underline mx-auto mt-2 bg-accent h-1 w-24"})]}),(0,c.jsx)("div",{className:"flex flex-wrap justify-center gap-4 mb-12",children:t.map((function(e){return(0,c.jsx)("button",{onClick:function(){return h(e)},className:"px-4 py-2 rounded-full font-medium transition-all duration-300 ".concat(d===e?"bg-primary text-black":"bg-light-gray hover:bg-secondary/50 text-secondary"),children:e},e)}))}),(0,c.jsx)(r.P.div,{className:"projects-grid",variants:{hidden:{opacity:0},show:{opacity:1,transition:{staggerChildren:.1}}},whileInView:"show",viewport:{once:!0,margin:"-50px"},children:S.map((function(e,t){return(0,c.jsxs)(r.P.div,{className:"project-card relative overflow-hidden",variants:E,whileHover:{y:-10},transition:{duration:.3},onMouseEnter:function(){return x(t)},onMouseLeave:function(){return x(null)},children:[(0,c.jsx)("div",{className:"project-image",children:(0,c.jsx)("img",{src:e.image,alt:e.title})}),(0,c.jsxs)("div",{className:"project-info",children:[(0,c.jsx)("h3",{className:"text-xl font-bold",children:e.title}),(0,c.jsx)("p",{className:"text-secondary-color line-clamp-3",children:e.description}),(0,c.jsx)("div",{className:"project-tags",children:e.technologies.map((function(e,t){return(0,c.jsx)("span",{children:e},t)}))}),(0,c.jsxs)("div",{className:"project-links",children:["#"!==e.demo&&(0,c.jsxs)("a",{href:e.demo,target:"_blank",rel:"noopener noreferrer",children:[(0,c.jsx)("i",{className:"fas fa-external-link-alt"})," Live Demo"]}),"#"!==e.github&&(0,c.jsxs)("a",{href:e.github,target:"_blank",rel:"noopener noreferrer",children:[(0,c.jsx)("i",{className:"fab fa-github"})," Source Code"]})]})]}),y===t&&(0,c.jsxs)("div",{className:"absolute inset-0 bg-black/90 p-6 flex flex-col justify-center text-white rounded-custom transition-all duration-300",children:[(0,c.jsx)("h3",{className:"text-xl font-bold mb-3",children:e.title}),(0,c.jsx)("p",{className:"mb-4",children:e.description}),(0,c.jsx)("div",{className:"project-tags mb-4",children:e.technologies.map((function(e,t){return(0,c.jsx)("span",{className:"bg-primary/80 text-white",children:e},t)}))}),(0,c.jsxs)("div",{className:"flex justify-center gap-5 mt-2",children:["#"!==e.github&&(0,c.jsxs)("a",{href:e.github,target:"_blank",rel:"noopener noreferrer",className:"flex items-center gap-2 text-white hover:text-primary-light",children:[(0,c.jsx)(s.BR8,{size:20})," ",(0,c.jsx)("span",{children:"Source"})]}),"#"!==e.demo&&(0,c.jsxs)("a",{href:e.demo,target:"_blank",rel:"noopener noreferrer",className:"flex items-center gap-2 text-white hover:text-primary-light",children:[(0,c.jsx)(s.HaR,{size:20})," ",(0,c.jsx)("span",{children:"Demo"})]})]})]})]},t)}))}),k>1&&(0,c.jsx)("div",{className:"flex justify-center mt-8 gap-2",children:Array.from({length:k},(function(e,t){return(0,c.jsx)("button",{onClick:function(){return m(t+1)},className:"px-3 py-1 rounded-md transition-colors ".concat(u===t+1?"bg-primary text-white":"bg-light-gray hover:bg-secondary-color/50"),children:t+1},t)}))})]})})}}}]);
//# sourceMappingURL=443.927bf823.chunk.js.map